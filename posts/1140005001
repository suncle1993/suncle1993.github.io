<!DOCTYPE html><html lang="zh-CN" data-default-color-scheme="auto"><head><meta charset="UTF-8"><link rel="apple-touch-icon" sizes="76x76" href="/img/apple-touch-icon.png"><link rel="icon" href="/img/android-chrome-192x192.png"><meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=5,shrink-to-fit=no"><meta http-equiv="x-ua-compatible" content="ie=edge"><meta http-equiv="Content-Security-Policy" content="upgrade-insecure-requests"><meta name="theme-color" content="#2f4154"><meta name="author" content="Suncle Chen"><meta name="keywords" content=""><meta name="description" content="安装安装mysql数据库的难度和oracle数据库简直没得比，安装步骤如下： 安装MariaDB12345yum install mariadb mariadb-server  # 安装，centos7默认的mysql就是mariadbsystemctl start mariadb  # 启动mariadbsystemctl enable mariadb  # 开机自启动mysql_secure_"><meta property="og:type" content="article"><meta property="og:title" content="Python-pymysql"><meta property="og:url" content="https://suncle.me/posts/1140005001"><meta property="og:site_name" content="Suncle"><meta property="og:description" content="安装安装mysql数据库的难度和oracle数据库简直没得比，安装步骤如下： 安装MariaDB12345yum install mariadb mariadb-server  # 安装，centos7默认的mysql就是mariadbsystemctl start mariadb  # 启动mariadbsystemctl enable mariadb  # 开机自启动mysql_secure_"><meta property="og:locale" content="zh_CN"><meta property="article:published_time" content="2017-04-14T14:29:54.000Z"><meta property="article:modified_time" content="2022-08-25T17:31:48.292Z"><meta property="article:author" content="Suncle Chen"><meta property="article:tag" content="pymysql"><meta property="article:tag" content="mysql"><meta property="article:tag" content="MariaDB"><meta name="twitter:card" content="summary_large_image"><meta name="referrer" content="no-referrer-when-downgrade"><title>Python-pymysql - Suncle</title><link rel="stylesheet" href="https://lib.baomitu.com/twitter-bootstrap/4.6.1/css/bootstrap.min.css"><link rel="stylesheet" href="https://lib.baomitu.com/github-markdown-css/4.0.0/github-markdown.min.css"><link rel="stylesheet" href="https://lib.baomitu.com/hint.css/2.7.0/hint.min.css"><link rel="stylesheet" href="https://lib.baomitu.com/fancybox/3.5.7/jquery.fancybox.min.css"><link rel="stylesheet" href="//at.alicdn.com/t/font_1749284_hj8rtnfg7um.css"><link rel="stylesheet" href="//at.alicdn.com/t/font_1736178_lbnruvf0jn.css"><link rel="stylesheet" href="/css/main.css"><link id="highlight-css" rel="stylesheet" href="/css/highlight.css"><link id="highlight-css-dark" rel="stylesheet" href="/css/highlight-dark.css"><script id="fluid-configs">var Fluid=window.Fluid||{};Fluid.ctx=Object.assign({},Fluid.ctx);var CONFIG={hostname:"suncle.me",root:"/",version:"1.9.2",typing:{enable:!1,typeSpeed:70,cursorChar:"_",loop:!1,scope:[]},anchorjs:{enable:!0,element:"h1,h2,h3,h4,h5,h6",placement:"left",visible:"hover",icon:""},progressbar:{enable:!0,height_px:3,color:"#29d",options:{showSpinner:!1,trickleSpeed:100}},code_language:{enable:!0,default:"TEXT"},copy_btn:!0,image_caption:{enable:!0},image_zoom:{enable:!0,img_url_replace:["",""]},toc:{enable:!0,placement:"right",headingSelector:"h1,h2,h3,h4,h5,h6",collapseDepth:0},lazyload:{enable:!0,loading_img:"/img/loading.gif",onlypost:!1,offset_factor:2},web_analytics:{enable:!1,follow_dnt:!0,baidu:"41fc030db57d5570dd22f78997dc4a7e",google:"UA-72506112-1",gtag:null,tencent:{sid:null,cid:null},woyaola:null,cnzz:null,leancloud:{app_id:null,app_key:null,server_url:null,path:"window.location.pathname",ignore_local:!1}},search_path:"/local-search.xml"};if(CONFIG.web_analytics.follow_dnt){var dntVal=navigator.doNotTrack||window.doNotTrack||navigator.msDoNotTrack;Fluid.ctx.dnt=dntVal&&(dntVal.startsWith("1")||dntVal.startsWith("yes")||dntVal.startsWith("on"))}</script><script src="/js/utils.js"></script><script src="/js/color-schema.js"></script><meta name="generator" content="Hexo 6.2.0"><link rel="alternate" href="/atom.xml" title="Suncle" type="application/atom+xml">
</head><body><header><div class="header-inner" style="height:60vh"><nav id="navbar" class="navbar fixed-top navbar-expand-lg navbar-dark scrolling-navbar"><div class="container"><a class="navbar-brand" href="/"><strong>Suncle&#39;s Blog</strong> </a><button id="navbar-toggler-btn" class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation"><div class="animated-icon"><span></span><span></span><span></span></div></button><div class="collapse navbar-collapse" id="navbarSupportedContent"><ul class="navbar-nav ml-auto text-center"><li class="nav-item"><a class="nav-link" href="/"><i class="iconfont icon-home-fill"></i> 首页</a></li><li class="nav-item"><a class="nav-link" href="/categories/newsletter/"><i class="iconfont icon-mail"></i> 周刊</a></li><li class="nav-item"><a class="nav-link" href="/archives/"><i class="iconfont icon-archive-fill"></i> 归档</a></li><li class="nav-item"><a class="nav-link" href="/about/"><i class="iconfont icon-user-fill"></i> 关于</a></li><li class="nav-item dropdown"><a class="nav-link dropdown-toggle" target="_self" href="javascript:;" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="iconfont icon-books"></i> 更多</a><div class="dropdown-menu" aria-labelledby="navbarDropdown"><a class="dropdown-item" href="/categories/"><i class="iconfont icon-category-fill"></i> 分类 </a><a class="dropdown-item" href="/tags/"><i class="iconfont icon-tags-fill"></i> 标签 </a><a class="dropdown-item" href="/atom.xml"><i class="iconfont icon-rss-fill"></i> RSS</a></div></li><li class="nav-item" id="search-btn"><a class="nav-link" target="_self" href="javascript:;" data-toggle="modal" data-target="#modalSearch" aria-label="Search">&nbsp;<i class="iconfont icon-search"></i>&nbsp;</a></li><li class="nav-item" id="color-toggle-btn"><a class="nav-link" target="_self" href="javascript:;" aria-label="Color Toggle">&nbsp;<i class="iconfont icon-dark" id="color-toggle-icon"></i>&nbsp;</a></li></ul></div></div></nav><div id="banner" class="banner" parallax="true" style="background:url(/img/suncle-banner.jpg) no-repeat center center;background-size:cover"><div class="full-bg-img"><div class="mask flex-center" style="background-color:rgba(0,0,0,.3)"><div class="banner-text text-center fade-in-up"><div class="h2"><span id="subtitle">Python-pymysql</span></div><div class="mt-3"><span class="post-meta"><i class="iconfont icon-date-fill" aria-hidden="true"></i> <time datetime="2017-04-14 22:29" pubdate>2017年4月14日 晚上</time></span></div><div class="mt-1"><span class="post-meta mr-2"><i class="iconfont icon-chart"></i> 7.5k 字 </span><span class="post-meta mr-2"><i class="iconfont icon-clock-fill"></i> 63 分钟</span></div></div></div></div></div></div></header><main><div class="container-fluid nopadding-x"><div class="row nomargin-x"><div class="side-col d-none d-lg-block col-lg-2"><aside class="sidebar category-bar" style="margin-right:-1rem"><div class="category-list"><div class="category row nomargin-x"><a class="category-item list-group-item category-item-action col-10 col-md-11 col-xm-11" title="python" id="heading-23eeeb4347bdd26bfc6b7ee9a3b755dd" role="tab" data-toggle="collapse" href="#collapse-23eeeb4347bdd26bfc6b7ee9a3b755dd" aria-expanded="true">python <span class="list-group-count">(32)</span> <i class="iconfont icon-arrowright"></i></a><div class="category-collapse collapse show" id="collapse-23eeeb4347bdd26bfc6b7ee9a3b755dd" role="tabpanel" aria-labelledby="heading-23eeeb4347bdd26bfc6b7ee9a3b755dd"><div class="category-post-list"><a href="/posts/2114861712" title="Python Google Protocol Buffer" class="list-group-item list-group-item-action"><span class="category-post">Python Google Protocol Buffer</span> </a><a href="/posts/3838453869" title="Python IO" class="list-group-item list-group-item-action"><span class="category-post">Python IO</span> </a><a href="/posts/501648532" title="Python-WSGI接口" class="list-group-item list-group-item-action"><span class="category-post">Python-WSGI接口</span> </a><a href="/posts/1140005001" title="Python-pymysql" class="list-group-item list-group-item-action active"><span class="category-post">Python-pymysql</span> </a><a href="/posts/3371524817" title="Python函数" class="list-group-item list-group-item-action"><span class="category-post">Python函数</span> </a><a href="/posts/3373145519" title="Python函数定义及参数详解" class="list-group-item list-group-item-action"><span class="category-post">Python函数定义及参数详解</span> </a><a href="/posts/3953642204" title="Python单元测试" class="list-group-item list-group-item-action"><span class="category-post">Python单元测试</span> </a><a href="/posts/2639636733" title="Python基本数据类型-list-tuple-dict-set" class="list-group-item list-group-item-action"><span class="category-post">Python基本数据类型-list-tuple-dict-set</span> </a><a href="/posts/4097981062" title="Python多线程" class="list-group-item list-group-item-action"><span class="category-post">Python多线程</span> </a><a href="/posts/1609178714" title="Python字符串" class="list-group-item list-group-item-action"><span class="category-post">Python字符串</span> </a><a href="/posts/3043416172" title="Python实现通用web框架" class="list-group-item list-group-item-action"><span class="category-post">Python实现通用web框架</span> </a><a href="/posts/2568280681" title="Python常用模块集锦" class="list-group-item list-group-item-action"><span class="category-post">Python常用模块集锦</span> </a><a href="/posts/668369792" title="Python异常处理" class="list-group-item list-group-item-action"><span class="category-post">Python异常处理</span> </a><a href="/posts/3005931287" title="Python拉链法和开地址法实现字典" class="list-group-item list-group-item-action"><span class="category-post">Python拉链法和开地址法实现字典</span> </a><a href="/posts/1516127351" title="Python描述器" class="list-group-item list-group-item-action"><span class="category-post">Python描述器</span> </a><a href="/posts/2253555633" title="Python时间模块常用操作总结" class="list-group-item list-group-item-action"><span class="category-post">Python时间模块常用操作总结</span> </a><a href="/posts/858751997" title="Python答疑解惑" class="list-group-item list-group-item-action"><span class="category-post">Python答疑解惑</span> </a><a href="/posts/3541559492" title="Python网络编程" class="list-group-item list-group-item-action"><span class="category-post">Python网络编程</span> </a><a href="/posts/2033838900" title="Python装饰器" class="list-group-item list-group-item-action"><span class="category-post">Python装饰器</span> </a><a href="/posts/106366875" title="Python装饰器实现函数动态类型检查" class="list-group-item list-group-item-action"><span class="category-post">Python装饰器实现函数动态类型检查</span> </a><a href="/posts/2276895921" title="Python解构与封装" class="list-group-item list-group-item-action"><span class="category-post">Python解构与封装</span> </a><a href="/posts/2607945880" title="Python解析式" class="list-group-item list-group-item-action"><span class="category-post">Python解析式</span> </a><a href="/posts/3226889536" title="Python面向对象基础" class="list-group-item list-group-item-action"><span class="category-post">Python面向对象基础</span> </a><a href="/posts/2725239063" title="Python面向对象的魔术方法" class="list-group-item list-group-item-action"><span class="category-post">Python面向对象的魔术方法</span> </a><a href="/posts/1924480698" title="SQLAlchemy使用" class="list-group-item list-group-item-action"><span class="category-post">SQLAlchemy使用</span> </a><a href="/posts/599780751" title="【填坑系列】Python习题集" class="list-group-item list-group-item-action"><span class="category-post">【填坑系列】Python习题集</span> </a><a href="/posts/2323272316" title="【填坑系列】Python基础知识总目录" class="list-group-item list-group-item-action"><span class="category-post">【填坑系列】Python基础知识总目录</span> </a><a href="/posts/139111991" title="从Python调用堆栈获取行号等信息" class="list-group-item list-group-item-action"><span class="category-post">从Python调用堆栈获取行号等信息</span> </a><a href="/posts/10731460" title="使用Google翻译Api" class="list-group-item list-group-item-action"><span class="category-post">使用Google翻译Api</span> </a><a href="/posts/4100952181" title="微博爬取热搜榜和热门话题" class="list-group-item list-group-item-action"><span class="category-post">微博爬取热搜榜和热门话题</span> </a><a href="/posts/3984252732" title="设计一个基于flask的高并发高可用的查询ip的http服务" class="list-group-item list-group-item-action"><span class="category-post">设计一个基于flask的高并发高可用的查询ip的http服务</span> </a><a href="/posts/1143805574" title="详解supervisor进程管理" class="list-group-item list-group-item-action"><span class="category-post">详解supervisor进程管理</span></a></div></div></div></div></aside></div><div class="col-lg-8 nopadding-x-md"><div class="container nopadding-x-md" id="board-ctn"><div id="board"><article class="post-content mx-auto"><h1 style="display:none">Python-pymysql</h1><div class="markdown-body"><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>安装mysql数据库的难度和oracle数据库简直没得比，安装步骤如下：</p><h2 id="安装MariaDB"><a href="#安装MariaDB" class="headerlink" title="安装MariaDB"></a>安装MariaDB</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install mariadb mariadb-server  # 安装，centos7默认的mysql就是mariadb<br>systemctl start mariadb  # 启动mariadb<br>systemctl enable mariadb  # 开机自启动<br>mysql_secure_installation  # 设置root密码<br>mysql -uroot -p  # 登录<br></code></pre></td></tr></table></figure><h2 id="安装pymysql"><a href="#安装pymysql" class="headerlink" title="安装pymysql"></a>安装pymysql</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip <span class="hljs-keyword">install</span> pymysql<br></code></pre></td></tr></table></figure><h1 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h1><p>数据库基本操作主要是：</p><ol><li>创建连接</li><li>获取游标</li><li>执行sql</li><li>提交事务：<strong>针对非查询性SQL</strong></li></ol><p><strong>代码</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pymysql<br><br><span class="hljs-comment"># connect函数打开数据库连接</span><br>conn = pymysql.connect(host=<span class="hljs-string">&#x27;192.168.110.13&#x27;</span>, user=<span class="hljs-string">&#x27;root&#x27;</span>, password=<span class="hljs-string">&#x27;123456&#x27;</span>, database=<span class="hljs-string">&#x27;student&#x27;</span>)<br><span class="hljs-comment"># cursor方法创建游标对象cur</span><br>cur = conn.cursor()<br><span class="hljs-comment"># execute方法执行SQL语句</span><br>cur.execute(<span class="hljs-string">&quot;SELECT VERSION()&quot;</span>)<br><span class="hljs-comment"># fetchone方法获取单条数据</span><br>data = cur.fetchone()<br><span class="hljs-built_in">print</span> (<span class="hljs-string">&#x27;Database version : &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(data))<br><span class="hljs-comment"># 关闭游标</span><br>cur.close()<br><span class="hljs-comment"># 关闭数据库连接</span><br>conn.close()<br></code></pre></td></tr></table></figure><span id="more"></span><h1 id="DDL"><a href="#DDL" class="headerlink" title="DDL"></a>DDL</h1><p>DDL：数据定义语言。包括创建表，创建索引等等</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pymysql<br><br><span class="hljs-comment"># connect函数打开数据库连接</span><br>conn = pymysql.connect(host=<span class="hljs-string">&#x27;192.168.110.13&#x27;</span>, user=<span class="hljs-string">&#x27;root&#x27;</span>, password=<span class="hljs-string">&#x27;123456&#x27;</span>, database=<span class="hljs-string">&#x27;student&#x27;</span>)<br><br><span class="hljs-comment"># cursor方法创建游标对象cur</span><br>cur = conn.cursor()<br><br><span class="hljs-comment"># 创建表</span><br>sql = <span class="hljs-string">&#x27;&#x27;&#x27;create table user (</span><br><span class="hljs-string">         name char(20) not null,</span><br><span class="hljs-string">         age int,  </span><br><span class="hljs-string">         sex char(1))&#x27;&#x27;&#x27;</span><br><br>cur.execute(sql)<br><br><span class="hljs-comment"># 关闭游标</span><br>cur.close()<br><span class="hljs-comment"># 关闭数据库连接</span><br>conn.close()<br></code></pre></td></tr></table></figure><h1 id="DML"><a href="#DML" class="headerlink" title="DML"></a>DML</h1><p>DML：数据操作语言，包含增删改三项操作。</p><h2 id="insert"><a href="#insert" class="headerlink" title="insert"></a>insert</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pymysql<br><br><span class="hljs-comment"># connect函数打开数据库连接</span><br>conn = pymysql.connect(host=<span class="hljs-string">&#x27;192.168.110.13&#x27;</span>, user=<span class="hljs-string">&#x27;root&#x27;</span>, password=<span class="hljs-string">&#x27;123456&#x27;</span>, database=<span class="hljs-string">&#x27;student&#x27;</span>)<br><br><span class="hljs-comment"># cursor方法创建游标对象cur</span><br>cur = conn.cursor()<br><br><span class="hljs-comment"># 创建表</span><br>sql = <span class="hljs-string">&#x27;&#x27;&#x27;insert into user(name, age, sex) values(&#x27;suncle&#x27;, 18, &#x27;m&#x27;)&#x27;&#x27;&#x27;</span><br><br><span class="hljs-keyword">try</span>:<br>    <span class="hljs-comment"># 执行sql语句</span><br>    cur.execute(sql)<br>    <span class="hljs-comment"># 提交到数据库执行</span><br>    conn.commit()<br><span class="hljs-keyword">except</span>:<br>    <span class="hljs-comment"># 如果发生错误则回滚</span><br>    conn.rollback()<br><br><span class="hljs-comment"># 关闭游标</span><br>cur.close()<br><span class="hljs-comment"># 关闭数据库连接</span><br>conn.close()<br></code></pre></td></tr></table></figure><h2 id="update"><a href="#update" class="headerlink" title="update"></a>update</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pymysql<br><br><span class="hljs-comment"># connect函数打开数据库连接</span><br>conn = pymysql.connect(host=<span class="hljs-string">&#x27;192.168.110.13&#x27;</span>, user=<span class="hljs-string">&#x27;root&#x27;</span>, password=<span class="hljs-string">&#x27;123456&#x27;</span>, database=<span class="hljs-string">&#x27;student&#x27;</span>)<br><br><span class="hljs-comment"># cursor方法创建游标对象cur</span><br>cur = conn.cursor()<br><br><span class="hljs-comment"># 创建表</span><br>sql = <span class="hljs-string">&#x27;&#x27;&#x27;update user t set t.age = 20 where t.name=&#x27;suncle&#x27; &#x27;&#x27;&#x27;</span><br><br><span class="hljs-keyword">try</span>:<br>    <span class="hljs-comment"># 执行sql语句</span><br>    cur.execute(sql)<br>    <span class="hljs-comment"># 提交到数据库执行</span><br>    conn.commit()<br><span class="hljs-keyword">except</span>:<br>    <span class="hljs-comment"># 如果发生错误则回滚</span><br>    conn.rollback()<br><br><span class="hljs-comment"># 关闭游标</span><br>cur.close()<br><span class="hljs-comment"># 关闭数据库连接</span><br>conn.close()<br></code></pre></td></tr></table></figure><h2 id="delete"><a href="#delete" class="headerlink" title="delete"></a>delete</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pymysql<br><br><span class="hljs-comment"># connect函数打开数据库连接</span><br>conn = pymysql.connect(host=<span class="hljs-string">&#x27;192.168.110.13&#x27;</span>, user=<span class="hljs-string">&#x27;root&#x27;</span>, password=<span class="hljs-string">&#x27;123456&#x27;</span>, database=<span class="hljs-string">&#x27;student&#x27;</span>)<br><br><span class="hljs-comment"># cursor方法创建游标对象cur</span><br>cur = conn.cursor()<br><br><span class="hljs-comment"># 创建表</span><br>sql = <span class="hljs-string">&#x27;&#x27;&#x27;delete from user where age=20 &#x27;&#x27;&#x27;</span><br><br><span class="hljs-keyword">try</span>:<br>    <span class="hljs-comment"># 执行sql语句</span><br>    cur.execute(sql)<br>    <span class="hljs-comment"># 提交到数据库执行</span><br>    conn.commit()<br><span class="hljs-keyword">except</span>:<br>    <span class="hljs-comment"># 如果发生错误则回滚</span><br>    conn.rollback()<br><br><span class="hljs-comment"># 关闭游标</span><br>cur.close()<br><span class="hljs-comment"># 关闭数据库连接</span><br>conn.close()<br></code></pre></td></tr></table></figure><h1 id="QUERY"><a href="#QUERY" class="headerlink" title="QUERY"></a>QUERY</h1><h2 id="基础查询"><a href="#基础查询" class="headerlink" title="基础查询"></a>基础查询</h2><p>主要有三个函数</p><ul><li>cursor.fetchall 返回行的元组</li><li>cursor.fetchmany 返回行的元组， 可以指定返回前N行 相当于对fetchall切片fetchall[:N]</li><li>cursor.fetchone 返回首行， 相当于fetchall[0]</li></ul><p>查询语句如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">cur.execute(<span class="hljs-string">&#x27;&#x27;&#x27;select * from user t where t.age&lt;=19;&#x27;&#x27;&#x27;</span>)<br></code></pre></td></tr></table></figure><p>三种方法得到的结果分别为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">cur.fetchall()  <span class="hljs-comment"># ((&#x27;suncle&#x27;, 18, &#x27;m&#x27;), (&#x27;suncle1&#x27;, 19, &#x27;m&#x27;))</span><br><br>cur.fetchmany(<span class="hljs-number">1</span>)  <span class="hljs-comment"># ((&#x27;suncle&#x27;, 18, &#x27;m&#x27;),)</span><br><br>cur.fetchone()  <span class="hljs-comment"># (&#x27;suncle&#x27;, 18, &#x27;m&#x27;)</span><br></code></pre></td></tr></table></figure><p>可见：每行数据也是一个元组， 元组的内容由sql决定</p><p>如果要让返回的数据带上列名，也就是要返回字典，那么就需要用到cursors.DictCursor。</p><h2 id="DictCursor"><a href="#DictCursor" class="headerlink" title="DictCursor"></a>DictCursor</h2><p>创建cursor时创建DictCursor类型的就可以fetch回来字典形式的结果了</p><p><strong>代码</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pymysql<br>conn = pymysql.connect(host=<span class="hljs-string">&#x27;192.168.110.13&#x27;</span>, user=<span class="hljs-string">&#x27;root&#x27;</span>, password=<span class="hljs-string">&#x27;123456&#x27;</span>, database=<span class="hljs-string">&#x27;student&#x27;</span>)<br><br><span class="hljs-comment"># 创建cursor时指定cursor参数cursor=pymysql.cursors.DictCursor表示cursor类型</span><br>cur = conn.cursor(cursor=pymysql.cursors.DictCursor)<br>cur.execute(<span class="hljs-string">&#x27;&#x27;&#x27;select * from user t where t.age&lt;=20;&#x27;&#x27;&#x27;</span>)<br>cur.fetchall()<br></code></pre></td></tr></table></figure><p>fetchall返回结果为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">[&#123;<span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">18</span>, <span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;suncle&#x27;</span>, <span class="hljs-string">&#x27;sex&#x27;</span>: <span class="hljs-string">&#x27;m&#x27;</span>&#125;,<br> &#123;<span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">19</span>, <span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;suncle1&#x27;</span>, <span class="hljs-string">&#x27;sex&#x27;</span>: <span class="hljs-string">&#x27;m&#x27;</span>&#125;,<br> &#123;<span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">20</span>, <span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;suncle2&#x27;</span>, <span class="hljs-string">&#x27;sex&#x27;</span>: <span class="hljs-string">&#x27;m&#x27;</span>&#125;]<br></code></pre></td></tr></table></figure><p>返回每一行记录都是一个字典，整体结果是由字典组成的列表。而默认的cursor是由元组组成的元组。</p><h1 id="参数化查询"><a href="#参数化查询" class="headerlink" title="参数化查询"></a>参数化查询</h1><h2 id="基础的SQL注入"><a href="#基础的SQL注入" class="headerlink" title="基础的SQL注入"></a>基础的SQL注入</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pymysql<br><br>conn = pymysql.connect(host=<span class="hljs-string">&#x27;192.168.110.13&#x27;</span>, user=<span class="hljs-string">&#x27;root&#x27;</span>, password=<span class="hljs-string">&#x27;123456&#x27;</span>, database=<span class="hljs-string">&#x27;student&#x27;</span>)<br>cur = conn.cursor()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_user</span>(<span class="hljs-params">age=<span class="hljs-number">18</span></span>):<br>    sql = <span class="hljs-string">&#x27;&#x27;&#x27;select * from user t where t.age&lt;=&#123;&#125;;&#x27;&#x27;&#x27;</span>.<span class="hljs-built_in">format</span>(age)<br>    cur.execute(sql)<br>    <span class="hljs-keyword">return</span> cur.fetchall()<br><br>get_user()  <span class="hljs-comment"># 返回((&#x27;suncle&#x27;, 18, &#x27;m&#x27;),)</span><br><br>get_user(<span class="hljs-string">&#x27;18 or 1=1&#x27;</span>)  <span class="hljs-comment"># 返回((&#x27;suncle&#x27;, 18, &#x27;m&#x27;), (&#x27;suncle1&#x27;, 19, &#x27;m&#x27;))</span><br></code></pre></td></tr></table></figure><p>当传入参数的age中带sql条件的时候，就会发生sql注入，使得结果可能并不满足要求。</p><p>为了解决sql注入，我们可以使用参数化查询。</p><h2 id="使用参数化查询"><a href="#使用参数化查询" class="headerlink" title="使用参数化查询"></a>使用参数化查询</h2><p>以上代码做以下修改之后就可以避免sql注入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pymysql<br><br><br>conn = pymysql.connect(host=<span class="hljs-string">&#x27;192.168.110.13&#x27;</span>, user=<span class="hljs-string">&#x27;root&#x27;</span>, password=<span class="hljs-string">&#x27;123456&#x27;</span>, database=<span class="hljs-string">&#x27;student&#x27;</span>)<br>cur = conn.cursor()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_user</span>(<span class="hljs-params">age=<span class="hljs-number">18</span></span>):<br>    <span class="hljs-comment"># 不管数据库定义的是什么类型，统一使用%s</span><br>    sql = <span class="hljs-string">&#x27;&#x27;&#x27;select * from user t where t.age&lt;=%s;&#x27;&#x27;&#x27;</span>.<span class="hljs-built_in">format</span>(age)<br>    cur.execute(sql, (age, ))  <span class="hljs-comment"># 参数化查询</span><br>    <span class="hljs-keyword">return</span> cur.fetchall()<br></code></pre></td></tr></table></figure><p>参数化查询最大的优势在于避免了SQL注入，同时参数化之后避免了sql多次硬解析，能提高查询效率。所以，总是应该使用参数化查询。</p><h1 id="上下文管理"><a href="#上下文管理" class="headerlink" title="上下文管理"></a>上下文管理</h1><p>数据库连接和游标都支持上下文管理。</p><p><strong>游标</strong></p><p>查看cur实例对应Cursor类的方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">cur = conn.cursor()<br><span class="hljs-built_in">help</span>(cur)<br></code></pre></td></tr></table></figure><p>对应的with语句使用如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> cur:<br>    cur.execute(<span class="hljs-string">&#x27;&#x27;&#x27;select * from user&#x27;&#x27;&#x27;</span>)<br><br>cur.execute(<span class="hljs-string">&#x27;&#x27;&#x27;select * from user&#x27;&#x27;&#x27;</span>)  <span class="hljs-comment"># 抛出错误：ProgrammingError: Cursor closed</span><br></code></pre></td></tr></table></figure><p>with语句块结束之后cur就已经关闭了。</p><p><strong>连接</strong></p><p>通过help命令查看Connection类的<code>__enter__</code>和<code>__exit__</code>两种方法的实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">conn = pymysql.connect(host=<span class="hljs-string">&#x27;192.168.110.13&#x27;</span>, user=<span class="hljs-string">&#x27;root&#x27;</span>, password=<span class="hljs-string">&#x27;123456&#x27;</span>, database=<span class="hljs-string">&#x27;student&#x27;</span>)<br><span class="hljs-built_in">help</span>(conn)  <span class="hljs-comment"># conn是Connection类</span><br></code></pre></td></tr></table></figure><p>查看结果如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">|  __enter__(self)<br>|      Context manager that returns a Cursor<br>|  <br>|  __exit__(self, exc, value, traceback)<br>|      On successful exit, commit. On exception, rollback<br></code></pre></td></tr></table></figure><ul><li><code>__enter__</code>方法会返回一个游标</li><li><code>__exit__</code>方法：如果成功推出就会自动提交commit，如果发生异常就会回滚rollback</li></ul><p>对应的with语句使用如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> conn <span class="hljs-keyword">as</span> cur:<br>    cur.execute(<span class="hljs-string">&#x27;&#x27;&#x27;update user t set t.age = 20 where t.name=&#x27;suncle&#x27; &#x27;&#x27;&#x27;</span>)<br><br>cur.execute(<span class="hljs-string">&#x27;&#x27;&#x27;select * from user&#x27;&#x27;&#x27;</span>)  <span class="hljs-comment"># 退出with块之后游标仍然没有关闭</span><br></code></pre></td></tr></table></figure><p>虽然游标没有关闭， 但是数据库操作已经提交。</p><p><strong>游标和连接共同上下文管理</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> conn <span class="hljs-keyword">as</span> cur:<br>    <span class="hljs-keyword">with</span> cur:<br>        cur.execute(<span class="hljs-string">&#x27;&#x27;&#x27;update user t set t.age = 20 where t.name=&#x27;suncle&#x27; &#x27;&#x27;&#x27;</span>)<br></code></pre></td></tr></table></figure><p>退出整个上下文管理块之后，游标会关闭，并且会自动提交。</p><h1 id="数据库连接池"><a href="#数据库连接池" class="headerlink" title="数据库连接池"></a>数据库连接池</h1><p>一般来说，应用程序访问数据库的过程是：</p><ol><li>装载数据库驱动程序</li><li>建立数据库连接</li><li>访问数据库，执行sql语句</li><li>断开数据库连接</li></ol><p>相对于性能正常的SQL的执行效率来说，建立连接是一个费时的活动，而且系统还要为每一个连接分配内存资源。在现在web请求的大并发量情况下，必然会导致频繁的数据库操作。而频繁的进行数据库连接操作势必占用很多的系统资源，使得系统的响应速度下降，严重的甚至会造成服务器的崩溃。</p><p><strong>引入数据库连接池技术之后，应用程序访问数据库的过程是：</strong></p><ol><li>请求数据库操作时，从连接池中取出创建好的数据库连接</li><li>执行sql语句</li><li>不断开数据库连接，而是放回连接池中，等待下次使用</li></ol><p>连接池还有个优点就是能控制数据库的压力，当大量用户同时涌入时，连接池只会使用池限制数据库连接数目，而不会不停的向数据库请求连接，最后导致服务器崩溃。</p><p><strong>Python实现数据库连接池</strong></p><ul><li>使用队列Queue保存数据库连接</li></ul><p>代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> queue <span class="hljs-keyword">import</span> Queue<br><span class="hljs-keyword">import</span> pymysql<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ConnectionPool</span>():  <span class="hljs-comment"># args和kwargs用来接收数据库url信息</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, size, *args, **kwargs</span>):<br>        self.args = args<br>        self.kwargs = kwargs<br>        self.size = size<br>        self.pool = Queue(maxsize=self.size)<br>        <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(self.size):<br>            self.pool.put(self._connect())<br>            <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_connect</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> pymysql.connect(*self.args, **self.kwargs)<br>    <br><span class="hljs-meta">    @staticmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_close</span>(<span class="hljs-params">conn</span>):<br>        conn.close()<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_connection</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> self.pool.get()<br> <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">return_connection</span>(<span class="hljs-params">self, conn</span>):<br>        <span class="hljs-keyword">return</span> self.pool.put(conn)<br> <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">close_pool</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> self.is_empty():<br>            self._close(self.pool.get())<br> <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">is_empty</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> self.pool.empty()<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">is_full</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> self.pool.full()<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">current_connection_count</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> self.pool.qsize()<br>    <br>    <br>pool = ConnectionPool(<span class="hljs-number">20</span>, host=<span class="hljs-string">&#x27;192.168.110.13&#x27;</span>, user=<span class="hljs-string">&#x27;root&#x27;</span>, password=<span class="hljs-string">&#x27;123456&#x27;</span>, database=<span class="hljs-string">&#x27;student&#x27;</span>)<br><br>conn = pool.get_connection()  <span class="hljs-comment"># 获取数据库连接</span><br><span class="hljs-built_in">print</span>(conn)  <span class="hljs-comment"># &lt;pymysql.connections.Connection at 0x7f6290300940&gt;</span><br><span class="hljs-built_in">print</span>(pool.current_connection_count())  <span class="hljs-comment"># 19</span><br>cur = conn.cursor()<br>cur.execute(<span class="hljs-string">&quot;SELECT VERSION()&quot;</span>)<br>data = cur.fetchone()<br><span class="hljs-built_in">print</span> (<span class="hljs-string">&#x27;Database version : &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(data[<span class="hljs-number">0</span>]))<br>cur.close()<br>pool.return_connection(conn)  <span class="hljs-comment"># 关闭游标之后需要回收数据库连接</span><br><span class="hljs-built_in">print</span>(pool.current_connection_count())  <span class="hljs-comment"># 20</span><br></code></pre></td></tr></table></figure></div><hr><div><div class="post-metas my-3"><div class="post-meta mr-3 d-flex align-items-center"><i class="iconfont icon-category"></i> <span class="category-chains"><span class="category-chain"><a href="/categories/python/" class="category-chain-item">python</a></span></span></div><div class="post-meta"><i class="iconfont icon-tags"></i> <a href="/tags/pymysql/">#pymysql</a> <a href="/tags/mysql/">#mysql</a> <a href="/tags/MariaDB/">#MariaDB</a></div></div><div class="license-box my-3"><div class="license-title"><div>Python-pymysql</div><div>https://suncle.me/posts/1140005001</div></div><div class="license-meta"><div class="license-meta-item"><div>作者</div><div>Suncle Chen</div></div><div class="license-meta-item license-meta-date"><div>发布于</div><div>2017年4月14日</div></div><div class="license-meta-item"><div>许可协议</div><div><a target="_blank" href="https://creativecommons.org/licenses/by/4.0/"><span class="hint--top hint--rounded" aria-label="BY - 署名"><i class="iconfont icon-by"></i></span></a></div></div></div><div class="license-icon iconfont"></div></div><div class="post-prevnext my-3"><article class="post-prev col-6"><a href="/posts/2847555892" title="JavaScript基础"><i class="iconfont icon-arrowleft"></i> <span class="hidden-mobile">JavaScript基础</span> <span class="visible-mobile">上一篇</span></a></article><article class="post-next col-6"><a href="/posts/501648532" title="Python-WSGI接口"><span class="hidden-mobile">Python-WSGI接口</span> <span class="visible-mobile">下一篇</span> <i class="iconfont icon-arrowright"></i></a></article></div></div><article id="comments" lazyload><script type="text/javascript">Fluid.utils.loadComments("#comments",(function(){var t=document.documentElement.getAttribute("data-user-color-scheme");t="dark"===t?"github-dark":"github-light",window.UtterancesThemeLight="github-light",window.UtterancesThemeDark="github-dark";var e=document.createElement("script");e.setAttribute("src","https://utteranc.es/client.js"),e.setAttribute("repo","suncle1993/suncle1993.github.io"),e.setAttribute("issue-term","pathname"),e.setAttribute("label","utterances"),e.setAttribute("theme",t),e.setAttribute("crossorigin","anonymous"),document.getElementById("comments").appendChild(e)}))</script><noscript>Please enable JavaScript to view the comments</noscript></article></article></div></div></div><div class="side-col d-none d-lg-block col-lg-2"><aside class="sidebar" style="margin-left:-1rem"><div id="toc"><p class="toc-header"><i class="iconfont icon-list"></i>&nbsp;目录</p><div class="toc-body" id="toc-body"></div></div></aside></div></div></div><a id="scroll-top-button" aria-label="TOP" href="#" role="button"><i class="iconfont icon-arrowup" aria-hidden="true"></i></a><div class="modal fade" id="modalSearch" tabindex="-1" role="dialog" aria-labelledby="ModalLabel" aria-hidden="true"><div class="modal-dialog modal-dialog-scrollable modal-lg" role="document"><div class="modal-content"><div class="modal-header text-center"><h4 class="modal-title w-100 font-weight-bold">搜索</h4><button type="button" id="local-search-close" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button></div><div class="modal-body mx-3"><div class="md-form mb-5"><input type="text" id="local-search-input" class="form-control validate"> <label data-error="x" data-success="v" for="local-search-input">关键词</label></div><div class="list-group" id="local-search-result"></div></div></div></div></div></main><footer><div class="footer-inner"><div class="footer-content"><a href="https://hexo.io" target="_blank" rel="nofollow noopener"><span>Hexo</span></a> <i class="iconfont icon-love"></i> <a href="https://github.com/fluid-dev/hexo-theme-fluid" target="_blank" rel="nofollow noopener"><span>Fluid</span></a></div><div class="statistics"><span id="busuanzi_container_site_pv" style="display:none">总访问量 <span id="busuanzi_value_site_pv"></span> 次 </span><span id="busuanzi_container_site_uv" style="display:none">总访客数 <span id="busuanzi_value_site_uv"></span> 人</span></div></div></footer><script src="https://lib.baomitu.com/nprogress/0.2.0/nprogress.min.js"></script><link rel="stylesheet" href="https://lib.baomitu.com/nprogress/0.2.0/nprogress.min.css"><script>NProgress.configure({showSpinner:!1,trickleSpeed:100}),NProgress.start(),window.addEventListener("load",(function(){NProgress.done()}))</script><script src="https://lib.baomitu.com/jquery/3.6.0/jquery.min.js"></script><script src="https://lib.baomitu.com/twitter-bootstrap/4.6.1/js/bootstrap.min.js"></script><script src="/js/events.js"></script><script src="/js/plugins.js"></script><script src="/js/img-lazyload.js"></script><script>Fluid.utils.createScript("https://lib.baomitu.com/tocbot/4.18.2/tocbot.min.js",(function(){var t=jQuery("#toc");if(0!==t.length&&window.tocbot){var o=jQuery("#board-ctn").offset().top;window.tocbot.init({tocSelector:"#toc-body",contentSelector:".markdown-body",headingSelector:CONFIG.toc.headingSelector||"h1,h2,h3,h4,h5,h6",linkClass:"tocbot-link",activeLinkClass:"tocbot-active-link",listClass:"tocbot-list",isCollapsedClass:"tocbot-is-collapsed",collapsibleClass:"tocbot-is-collapsible",collapseDepth:CONFIG.toc.collapseDepth||0,scrollSmooth:!0,headingsOffset:-o}),t.find(".toc-list-item").length>0&&t.css("visibility","visible")}}))</script><script src="https://lib.baomitu.com/clipboard.js/2.0.10/clipboard.min.js"></script><script>Fluid.plugins.codeWidget()</script><script>Fluid.utils.createScript("https://lib.baomitu.com/anchor-js/4.3.1/anchor.min.js",(function(){window.anchors.options={placement:CONFIG.anchorjs.placement,visible:CONFIG.anchorjs.visible},CONFIG.anchorjs.icon&&(window.anchors.options.icon=CONFIG.anchorjs.icon);var o=(CONFIG.anchorjs.element||"h1,h2,h3,h4,h5,h6").split(","),n=[];for(var i of o)n.push(".markdown-body > "+i.trim());"left"===CONFIG.anchorjs.placement&&(window.anchors.options.class="anchorjs-link-left"),window.anchors.add(n.join(", "))}))</script><script>Fluid.utils.createScript("https://lib.baomitu.com/fancybox/3.5.7/jquery.fancybox.min.js",(function(){Fluid.plugins.fancyBox()}))</script><script>Fluid.plugins.imageCaption()</script><script src="/js/local-search.js"></script><script defer src="https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"></script><script src="/js/boot.js"></script><noscript><div class="noscript-warning">博客在允许 JavaScript 运行的环境下浏览效果更佳</div></noscript></body></html>